{"version":3,"sources":["Components/Dimension/NumBeats.js","Components/Dimension/Subdivision.js","Components/Dimension/PlayStopButton.js","Components/Dimension/TempoSlider.js","Components/Dimension/ResetButton.js","Components/Dimension.js","Components/StepSequence/TopRow.js","Components/StepSequence/BottomRow.js","Components/StepSequence.js","App.js","index.js"],"names":["NumBeats","_this","this","react_default","a","createElement","className","id","defaultValue","onChange","props","updateTimeSig","playing","restartPlaying","value","React","Component","Subdivision","PlayStopButton","onClick","updateMetronome","togglePlaying","TempoSlider","type","min","max","updateBPM","bpm","ResetButton","console","log","resetMetronome","Dimension","Dimension_NumBeats","timeSig","Dimension_Subdivision","Dimension_ResetButton","Dimension_PlayStopButton","Dimension_TempoSlider","TopRow","name","e","updateNotes","BottomRow","StepSequence","StepSequence_TopRow","StepSequence_BottomRow","synth","Tone","PolySynth","Synth","toMaster","StartAudioContext","context","then","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","notes","renderedNotes","metronomeContainer","loopStatus","tempDivisor","placement","visualizeIndex","eventCache","_this2","generateMetronome","generateStepSequence","window","addEventListener","keyCode","preventDefault","_this3","setState","seqIsPlaying","Transport","stop","loop","loopEnd","loopStart","concat","calcMetLength","start","_this4","error","_this5","document","querySelector","slider","innerHTML","parseInt","_this6","top","bottom","Math","pow","_this7","topNote","bottomNote","forEach","part","removeAll","_this$state$notes","slicedToArray","note1","note2","metLength","beatTicks","calcBeatTicks","i","push","note","time","velocity","Part","triggerAttackRelease","matrix","readCheckboxes","generateSeqMatrix","topRow","bottomRow","div","key","element","checked","setAttribute","label","highlight","hidden","appendChild","array","topRowButtons","querySelectorAll","bottomRowButtons","topArray","bottomArray","length","_this$state$timeSig","numerator","finalMatrix","_this$state$timeSig2","tempMultiplier","Components_Dimension","bind","Components_StepSequence","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.da0d7589.chunk.js","sourcesContent":["import React from \"react\";\n\nclass NumBeats extends React.Component {\n  render() {\n    return (\n      <div className=\"num-beats-div\">\n        <select\n          id=\"num-beats-input\"\n          defaultValue=\"4\"\n          onChange={() => {\n            this.props.updateTimeSig();\n            if (this.props.playing) {\n              this.props.restartPlaying();\n            }\n          }}\n        >\n          <option value=\"2\">2</option>\n          <option value=\"3\">3</option>\n          <option value=\"4\">4</option>\n          <option value=\"5\">5</option>\n          <option value=\"6\">6</option>\n          <option value=\"7\">7</option>\n          <option value=\"8\">8</option>\n          <option value=\"9\">9</option>\n          <option value=\"10\">10</option>\n          <option value=\"11\">11</option>\n          <option value=\"12\">12</option>\n          <option value=\"13\">13</option>\n          <option value=\"14\">14</option>\n          <option value=\"15\">15</option>\n          <option value=\"16\">16</option>\n          <option value=\"17\">17</option>\n          <option value=\"18\">18</option>\n          <option value=\"19\">19</option>\n          <option value=\"20\">20</option>\n        </select>\n        <div id=\"num-beats-desc\"># of beats</div>\n      </div>\n    );\n  }\n}\n\nexport default NumBeats;\n","import React from \"react\";\n\nclass Subdivision extends React.Component {\n  render() {\n    return (\n      <div className=\"subdivision-div\">\n        <select\n          id=\"subdivision-input\"\n          defaultValue=\"2\"\n          onChange={() => {\n            this.props.updateTimeSig();\n            if (this.props.playing) {\n              this.props.restartPlaying();\n            }\n          }}\n        >\n          <option value=\"1\">2</option>\n          <option value=\"2\">4</option>\n          <option value=\"3\">8</option>\n          <option value=\"4\">16</option>\n          <option value=\"5\">32</option>\n        </select>\n        <div id=\"subdivision-desc\">subdivision</div>\n      </div>\n    );\n  }\n}\n\nexport default Subdivision;\n","import React from \"react\";\n\nclass PlayStopButton extends React.Component {\n  render() {\n    return (\n      <div id=\"play-stop-div\">\n        <button\n          className=\"top-btns\"\n          id=\"play-stop-btn\"\n          onClick={() => {\n            this.props.updateMetronome();\n            this.props.togglePlaying();\n          }}\n        >\n          {this.props.playing ? (\n            <span>&#10074;&#10074;</span>\n          ) : (\n            <span>&#9658;</span>\n          )}\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default PlayStopButton;\n","import React from \"react\";\n\nclass TempoSlider extends React.Component {\n  render() {\n    return (\n      <div id=\"tempo-div\">\n        <input\n          id=\"tempo-sld\"\n          type=\"range\"\n          min=\"30\"\n          max=\"400\"\n          defaultValue=\"120\"\n          onChange={() => this.props.updateBPM()}\n        />\n        <div id=\"tempo-value\">\n          <div id=\"tempo-value-header\">\n            Quarter notes per minute:\n            <div id=\"bpm-value\">{this.props.bpm}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TempoSlider;\n","import React from \"react\";\n\nclass ResetButton extends React.Component {\n  render() {\n    return (\n      <div id=\"reset-div\">\n        <button\n          className=\"reset-btn\"\n          id=\"reset-btn\"\n          onClick={() => {\n            console.log(\"resetting metronome\");\n            this.props.resetMetronome();\n          }}\n        >\n          Reset\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default ResetButton;\n","import React from \"react\";\nimport NumBeats from \"./Dimension/NumBeats.js\";\nimport Subdivision from \"./Dimension/Subdivision.js\";\nimport PlayStopButton from \"./Dimension/PlayStopButton.js\";\nimport TempoSlider from \"./Dimension/TempoSlider.js\";\nimport ResetButton from \"./Dimension/ResetButton.js\";\n\nclass Dimension extends React.Component {\n  render() {\n    return (\n      <div className=\"dimension\">\n        <div className=\"time-signature\">\n          <NumBeats\n            playing={this.props.playing}\n            timeSig={this.props.timeSig}\n            updateTimeSig={this.props.updateTimeSig}\n            updateMetronome={this.props.updateMetronome}\n            restartPlaying={this.props.restartPlaying}\n          />\n          <Subdivision\n            playing={this.props.playing}\n            timeSig={this.props.timeSig}\n            updateTimeSig={this.props.updateTimeSig}\n            restartPlaying={this.props.restartPlaying}\n            updateMetronome={this.props.updateMetronome}\n          />\n          <ResetButton\n            updateTimeSig={this.props.updateTimeSig}\n            updateMetronome={this.props.updateMetronome}\n            resetMetronome={this.props.resetMetronome}\n          />\n        </div>\n        <div className=\"play-export\">\n          <PlayStopButton\n            togglePlaying={this.props.togglePlaying}\n            playing={this.props.playing}\n            updateMetronome={this.props.updateMetronome}\n          />\n        </div>\n        <TempoSlider updateBPM={this.props.updateBPM} bpm={this.props.bpm} />\n      </div>\n    );\n  }\n}\n\nexport default Dimension;\n","import React from \"react\";\n\nclass TopRow extends React.Component {\n  render() {\n    return (\n      <div id=\"top-shell-div\" className=\"note-shell-divs\">\n        <select\n          name=\"note1\"\n          id=\"note1\"\n          className=\"note-selects\"\n          defaultValue=\"Eb5\"\n          onChange={e => {\n            this.props.updateNotes();\n          }}\n        >\n          <option value=\"Ab4\">Ab4</option>\n          <option value=\"A4\">A4</option>\n          <option value=\"Bb4\">Bb4</option>\n          <option value=\"B4\">B4</option>\n          <option value=\"C5\">C5</option>\n          <option value=\"Db5\">Db5</option>\n          <option value=\"D5\">D5</option>\n          <option value=\"Eb5\">Eb5</option>\n          <option value=\"E5\">E5</option>\n          <option value=\"F5\">F5</option>\n          <option value=\"Gb5\">Gb5</option>\n          <option value=\"G5\">G5</option>\n          <option value=\"Ab5\">Ab5</option>\n          <option value=\"A5\">A5</option>\n          <option value=\"Bb5\">Bb5</option>\n          <option value=\"B5\">B5</option>\n        </select>\n        <div\n          className=\"top-row\"\n          onClick={e => {\n            //   e.preventDefault(); // ** WHY DOES THIS WORK ??\n            this.props.updateMetronome();\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default TopRow;\n","import React from \"react\";\n\nclass BottomRow extends React.Component {\n  render() {\n    return (\n      <div id=\"bottom-shell-div\" className=\"note-shell-divs\">\n        <select\n          name=\"note2\"\n          id=\"note2\"\n          className=\"note-selects\"\n          defaultValue=\"C5\"\n          onChange={e => {\n            this.props.updateNotes();\n          }}\n        >\n          <option value=\"Ab4\">Ab4</option>\n          <option value=\"A4\">A4</option>\n          <option value=\"Bb4\">Bb4</option>\n          <option value=\"B4\">B4</option>\n          <option value=\"C5\">C5</option>\n          <option value=\"Db5\">Db5</option>\n          <option value=\"D5\">D5</option>\n          <option value=\"Eb5\">Eb5</option>\n          <option value=\"E5\">E5</option>\n          <option value=\"F5\">F5</option>\n          <option value=\"Gb5\">Gb5</option>\n          <option value=\"G5\">G5</option>\n          <option value=\"Ab5\">Ab5</option>\n          <option value=\"A5\">A5</option>\n          <option value=\"Bb5\">Bb5</option>\n          <option value=\"B5\">B5</option>\n        </select>\n\n        <div\n          className=\"bottom-row\"\n          onClick={e => {\n            this.props.updateMetronome();\n            //   e.preventDefault(); // ** WHY DOES THIS WORK ??\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default BottomRow;\n","import React from \"react\";\nimport TopRow from \"./StepSequence/TopRow.js\";\nimport BottomRow from \"./StepSequence/BottomRow.js\";\n// import ProgressBar from \"./StepSequence/ProgressBar.js\";\n\nclass StepSequence extends React.Component {\n  render() {\n    return (\n      <div id=\"step-sequence\">\n        <TopRow\n          updateMetronome={this.props.updateMetronome}\n          updateNotes={this.props.updateNotes}\n        />\n        <BottomRow\n          updateMetronome={this.props.updateMetronome}\n          updateNotes={this.props.updateNotes}\n        />\n        {/* <ProgressBar /> */}\n      </div>\n    );\n  }\n}\n\nexport default StepSequence;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dimension from \"./Components/Dimension.js\";\nimport StepSequence from \"./Components/StepSequence.js\";\nimport Tone from \"tone\";\nimport StartAudioContext from \"startaudiocontext\";\n\n/*\nTo-Do\n- ?? variable tempo display indicators - quarters/eighths/etc per minute\n- organize and document css files\n- visualizations\n- step sequencer large numerator formatting (only make >11 available for 8ths, 16ths, 32nds)\n*/\n\n/*\n * Questions\n ** how/where to extract magic numbers in calcMetLength and calcBeatTicks ??\n ** how does e.preventDefault() work on top and bottom row of step sequencer ??\n ** better way of writing resetMetronome() with multiple querySelectors on one element?\n */\n\nconst synth = new Tone.PolySynth(2, Tone.Synth).toMaster();\n\n// this may be unnecessary\nStartAudioContext(Tone.context).then(function() {\n  console.log(\"start audio context triggered\");\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playing: false,\n      bpm: 120,\n      notes: [\"C5\", \"EB5\"],\n      timeSig: [4, 4],\n      renderedNotes: [],\n      metronomeContainer: [], // holds Part for future stoppage and erasal\n      loopStatus: false, // what is this used for?\n      tempDivisor: 4,\n      placement: 0,\n      visualizeIndex: 0,\n      eventCache: []\n    };\n  }\n\n  componentDidMount() {\n    this.generateMetronome();\n    this.generateStepSequence();\n\n    // event listener for space bar\n    window.addEventListener(\"keydown\", e => {\n      if (e.keyCode === 32 || e.keyCode === 13) {\n        try {\n          e.preventDefault(); // prevents space bar from triggering selected checkboxes\n          this.togglePlaying();\n        } catch (e) {\n          console.log(e);\n        }\n      }\n    });\n  }\n\n  togglePlaying() {\n    if (this.state.playing) {\n      this.setState({ playing: false, seqIsPlaying: false }, () => {\n        //stop transport\n        Tone.Transport.stop();\n        console.log(\"playing stopped\");\n\n        // turn off looping - prevents collision with measure sequence loop\n        Tone.Transport.loop = false;\n        Tone.Transport.loopEnd = 0;\n      });\n    } else {\n      this.setState({ playing: true, seqIsPlaying: false }, () => {\n        // configure looping for step sequencer\n        Tone.Transport.loopStart = 0;\n        console.log(`calculated metronome length: ${this.calcMetLength()}`);\n        Tone.Transport.loopEnd =\n          this.calcMetLength() / (this.state.bpm * (8 / 60)); // magic equation\n        Tone.Transport.loop = true;\n\n        // start transport after loop config\n        Tone.Transport.start(\"+0.0\");\n        console.log(\"playing initiated\");\n      });\n    }\n  }\n\n  restartPlaying() {\n    if (this.state.playing) {\n      this.setState({ playing: true, seqIsPlaying: false }, () => {\n        //stop transport\n        Tone.Transport.stop();\n\n        // configure looping for step sequencer\n        Tone.Transport.loopStart = 0;\n        Tone.Transport.loopEnd =\n          this.calcMetLength() / (this.state.bpm * (8 / 60)); // magic equation\n        Tone.Transport.loop = true;\n\n        // start transport after loop config\n        Tone.Transport.start(\"+0.0\");\n        console.log(\"playing restarted\");\n      });\n    } else {\n      console.error(\"restartPlaying called while not playing\");\n    }\n  }\n\n  resetMetronome() {\n    console.log(\"resetting metronome II\");\n    this.setState(\n      {\n        bpm: 120,\n        loopStatus: false,\n        notes: [\"C5\", \"EB5\"],\n        timeSig: [4, 4]\n      },\n      () => {\n        // querySelectors - eliminate magic numbers - maybe move somewhere else?\n        document.querySelector(\"#num-beats-input\").value = 4;\n        document.querySelector(\"#subdivision-input\").value = 2;\n        document.querySelector(\"#note1\").value = \"Eb5\";\n        document.querySelector(\"#note2\").value = \"C5\";\n\n        this.updateBPM(this.state.bpm);\n        this.generateStepSequence();\n        this.updateMetronome();\n        this.restartPlaying();\n      }\n    );\n  }\n\n  updateBPM(value) {\n    // better way of writing this, maybe without two querySelectors??\n    const slider = value ? value : document.querySelector(\"#tempo-sld\").value;\n    if (value) {\n      document.querySelector(\"#tempo-sld\").value = value;\n    }\n    // set slider label\n    document.querySelector(\"#bpm-value\").innerHTML = `${slider}`;\n    this.setState(\n      {\n        bpm: parseInt(slider)\n      },\n      () => {\n        Tone.Transport.bpm.value = parseInt(slider);\n      }\n    );\n  }\n\n  updateTimeSig() {\n    // retrieve time signature values from select elements\n    const top = document.querySelector(\"#num-beats-input\");\n    const bottom = document.querySelector(\"#subdivision-input\");\n    this.setState(\n      {\n        timeSig: [parseInt(top.value), Math.pow(2, parseInt(bottom.value))]\n      },\n      () => {\n        console.log(\n          `time signature updated: ${this.state.timeSig[0]} / ${\n            this.state.timeSig[1]\n          }`\n        );\n        this.generateStepSequence();\n        this.updateMetronome();\n      }\n    );\n  }\n\n  // updates frequencies of notes\n  updateNotes() {\n    console.log(\"updating notes\");\n    const topNote = document.querySelector(\"#note1\").value;\n    const bottomNote = document.querySelector(\"#note2\").value;\n\n    this.setState(\n      {\n        notes: [bottomNote, topNote]\n      },\n      () => {\n        this.updateMetronome();\n      }\n    );\n  }\n\n  generateMetronome() {\n    console.log(\"generate metronome\");\n    // erase or stop all previous parts\n    const metronomeContainer = this.state.metronomeContainer;\n    metronomeContainer.forEach(part => part.removeAll());\n\n    // metronome vitals\n    const [note1, note2] = this.state.notes;\n    const metLength = this.calcMetLength();\n    const beatTicks = this.calcBeatTicks();\n\n    // new renderedNotes array, populate\n    const renderedNotes = [];\n    for (let i = 0; i < metLength; i++) {\n      if (i === 0) {\n        renderedNotes.push({\n          note: note2,\n          time: `0:0`,\n          velocity: 0.05\n        });\n      } else if (i % beatTicks === 0) {\n        renderedNotes.push({\n          note: note1,\n          time: `0:${i / beatTicks}`,\n          velocity: 0.05\n        });\n      }\n    }\n\n    // create new Part, start Part, push Part to container\n    const part = new Tone.Part((time, value) => {\n      synth.triggerAttackRelease(value.note, \"32n\", time, value.velocity);\n    }, renderedNotes).start(0);\n    metronomeContainer.push(part);\n\n    this.setState({\n      renderedNotes,\n      metronomeContainer\n    });\n  }\n\n  updateMetronome() {\n    console.log(\"updating metronome\");\n    // erase or stop all previous parts\n    const metronomeContainer = this.state.metronomeContainer;\n    metronomeContainer.forEach(part => part.removeAll());\n\n    // metronome vitals\n    const timeSig = this.state.timeSig;\n    const notes = this.state.notes;\n    const metLength = this.calcMetLength(timeSig);\n    const beatTicks = this.calcBeatTicks(timeSig[1]);\n\n    // make copy of rendered notes and erase everything\n    const renderedNotes = [];\n    const matrix = this.readCheckboxes();\n    console.log(\"updated matrix: \" + matrix);\n    for (let i = 0; i < metLength; i++) {\n      if (timeSig[1] <= 4 && i % (beatTicks / 2) === 0) {\n        if (matrix[0][i / (beatTicks / 2)] === 1) {\n          renderedNotes.push({\n            note: notes[1],\n            time: `0:${i / 8}`,\n            velocity: 0.1\n          });\n        }\n        if (matrix[1][i / (beatTicks / 2)] === 1) {\n          renderedNotes.push({\n            note: notes[0],\n            time: `0:${i / 8}`,\n            velocity: 0.1\n          });\n        }\n      } else if (i % beatTicks === 0) {\n        if (matrix[0][i / beatTicks] === 1) {\n          renderedNotes.push({\n            note: notes[1],\n            time: `0:${i / 8}`,\n            velocity: 0.1\n          });\n        }\n        if (matrix[1][i / beatTicks] === 1) {\n          renderedNotes.push({\n            note: notes[0],\n            time: `0:${i / 8}`,\n            velocity: 0.1\n          });\n        }\n      }\n    }\n    const part = new Tone.Part((time, value) => {\n      synth.triggerAttackRelease(value.note, \"32n\", time, value.velocity);\n    }, renderedNotes).start(0);\n    metronomeContainer.push(part);\n\n    this.setState({\n      renderedNotes,\n      metronomeContainer\n    });\n  }\n\n  generateStepSequence() {\n    const timeSig = this.state.timeSig;\n    const matrix = this.generateSeqMatrix();\n    const topRow = document.querySelector(\".top-row\");\n    const bottomRow = document.querySelector(\".bottom-row\");\n\n    console.log(\"updating top row checkboxes\");\n    // conditionals based on time signature divisor\n    // - halves and quarters are twice as many checkboxes as the numerator to accomodate one rhythmic level below (halves and quarters / quarters and eighths)\n    if (timeSig[1] >= 8) {\n      topRow.innerHTML = \"\";\n      for (let i = 0; i < timeSig[0]; i++) {\n        const div = document.createElement(\"div\");\n        div.key = \"td\" + i;\n        div.className = \"top-row-shell\";\n        const element = document.createElement(\"input\");\n        element.type = \"checkbox\";\n        element.key = \"a\" + i;\n        element.id = \"tr\" + i;\n        element.className = \"top-row-btn\";\n        element.checked = i === 0 ? true : false;\n        element.setAttribute(\"highlighted\", false);\n        const label = document.createElement(\"label\");\n        label.key = \"tk\" + i;\n        label.setAttribute(\"for\", \"tr\" + i);\n        const highlight = document.createElement(\"div\");\n        highlight.key = \"th\" + i;\n        highlight.className = \"highlight\";\n        highlight.hidden = false;\n        label.appendChild(highlight);\n        div.appendChild(element);\n        div.appendChild(label);\n        topRow.appendChild(div);\n      }\n    } else if (timeSig[1] <= 4) {\n      topRow.innerHTML = \"\";\n      for (let i = 0; i < timeSig[0] * 2; i++) {\n        const div = document.createElement(\"div\");\n        div.key = \"td\" + i;\n        div.className = \"top-row-shell\";\n        const element = document.createElement(\"input\");\n        element.type = \"checkbox\";\n        element.key = \"b\" + i;\n        element.id = \"tr\" + i;\n        element.className = \"top-row-btn\";\n        element.checked = matrix[0] === 1 && i === 0 ? true : false;\n        element.setAttribute(\"highlighted\", false);\n        const label = document.createElement(\"label\");\n        label.key = \"tk\" + i;\n        label.setAttribute(\"for\", \"tr\" + i);\n        const highlight = document.createElement(\"div\");\n        highlight.key = \"th\" + i;\n        highlight.className = \"highlight\";\n        highlight.hidden = false;\n        label.appendChild(highlight);\n        div.appendChild(element);\n        div.appendChild(label);\n        topRow.appendChild(div);\n      }\n    }\n\n    console.log(\"updating bottom row checkboxes\");\n    if (timeSig[1] >= 8) {\n      bottomRow.innerHTML = \"\";\n      for (let i = 0; i < timeSig[0]; i++) {\n        const div = document.createElement(\"div\");\n        div.key = \"td\" + i;\n        div.className = \"bottom-row-shell\";\n        const element = document.createElement(\"input\");\n        element.type = \"checkbox\";\n        element.key = \"a\" + i;\n        element.id = \"br\" + i;\n        element.className = \"bottom-row-btn\";\n        element.checked = matrix[i] === 1 && i !== 0 ? true : false;\n        const label = document.createElement(\"label\");\n        label.key = \"bk\" + i;\n        label.setAttribute(\"for\", \"br\" + i);\n        const highlight = document.createElement(\"div\");\n        highlight.key = \"th\" + i;\n        highlight.className = \"highlight\";\n        highlight.hidden = false;\n        label.appendChild(highlight);\n        div.appendChild(element);\n        div.appendChild(label);\n        bottomRow.appendChild(div);\n      }\n    } else if (timeSig[1] <= 4) {\n      bottomRow.innerHTML = \"\";\n      for (let i = 0; i < timeSig[0] * 2; i++) {\n        const div = document.createElement(\"div\");\n        div.key = \"td\" + i;\n        div.className = \"bottom-row-shell\";\n        const element = document.createElement(\"input\");\n        element.type = \"checkbox\";\n        element.key = \"b\" + i;\n        element.id = \"br\" + i;\n        element.className = \"bottom-row-btn\";\n        element.checked = matrix[i] === 1 && i !== 0 ? true : false;\n        const label = document.createElement(\"label\");\n        label.key = \"bk\" + i;\n        label.setAttribute(\"for\", \"br\" + i);\n        const highlight = document.createElement(\"div\");\n        highlight.key = \"th\" + i;\n        highlight.className = \"highlight\";\n        highlight.hidden = false;\n        label.appendChild(highlight);\n        div.appendChild(element);\n        div.appendChild(label);\n        bottomRow.appendChild(div);\n      }\n    }\n  }\n\n  // computes a matrix based upon the current state of the step sequencer\n  readCheckboxes(array) {\n    console.log(\"reading checkboxes\");\n    // gather current checkboxes\n    const topRowButtons = document.querySelectorAll(\".top-row-btn\");\n    const bottomRowButtons = document.querySelectorAll(\".bottom-row-btn\");\n    console.log(\"top row step seq: \", topRowButtons);\n    // create new arrays\n    const topArray = [];\n    const bottomArray = [];\n    if (!array) {\n      for (let i = 0; i < topRowButtons.length; i++) {\n        topArray.push(topRowButtons[i].checked ? 1 : 0);\n        bottomArray.push(bottomRowButtons[i].checked ? 1 : 0);\n      }\n      console.log([topArray, bottomArray]);\n      return [topArray, bottomArray];\n    } else {\n      for (let i = 0; i < topRowButtons.length; i++) {\n        topArray.push(topRowButtons[i].checked ? 1 : 0);\n        bottomArray.push(bottomRowButtons[i].checked ? 1 : 0);\n      }\n      console.log([topArray, bottomArray]);\n      return [topArray, bottomArray];\n    }\n  }\n\n  // generates a generic matrix for new time signatures\n  generateSeqMatrix() {\n    console.log(\"generating step sequence matrix\");\n    const [numerator, denominator] = this.state.timeSig;\n    const finalMatrix = [];\n    // 8ths, 16ths, and 32nds matrices length determined by numerator\n    // half and quarters matrices length twice as long to incorporate rhythmic level below\n    if (denominator >= 8) {\n      for (let i = 0; i < numerator; i++) {\n        i % 2 === 0 ? finalMatrix.push(1) : finalMatrix.push(0);\n      }\n    } else {\n      for (let i = 0; i < numerator * 2; i++) {\n        i % 2 === 0 ? finalMatrix.push(1) : finalMatrix.push(0);\n      }\n    }\n    return finalMatrix;\n  }\n\n  // calculates phrase length of given time signature at 32nd resolution\n  calcMetLength() {\n    const [tempMultiplier, tempDivisor] = this.state.timeSig;\n    switch (tempDivisor) {\n      case 2:\n        return 16 * tempMultiplier;\n      case 4:\n        return 8 * tempMultiplier;\n      case 8:\n        return 4 * tempMultiplier;\n      case 16:\n        return 2 * tempMultiplier;\n      case 32:\n        return tempMultiplier;\n      default:\n        return 8 * tempMultiplier;\n    }\n  }\n\n  // returns resolution of note placement for generateMetronome()\n  calcBeatTicks() {\n    switch (this.state.timeSig[1]) {\n      case 2:\n        return 16;\n      case 4:\n        return 8;\n      case 8:\n        return 4;\n      case 16:\n        return 2;\n      case 32:\n        return 1;\n      default:\n        return 8;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <span id=\"info-span\">Sam Parsons ©2019</span>\n        <div className=\"title\">\n          <h3>Multimeter Metronome</h3>\n        </div>\n        <Dimension\n          timeSig={this.state.timeSig}\n          updateTimeSig={this.updateTimeSig.bind(this)}\n          updateMetronome={this.updateMetronome.bind(this)}\n          playing={this.state.playing}\n          togglePlaying={this.togglePlaying.bind(this)}\n          restartPlaying={this.restartPlaying.bind(this)}\n          bpm={this.state.bpm}\n          updateBPM={this.updateBPM.bind(this)}\n          resetMetronome={this.resetMetronome.bind(this)}\n        />\n        <StepSequence\n          generateStepSequence={this.generateStepSequence.bind(this)}\n          updateMetronome={this.updateMetronome.bind(this)}\n          updateNotes={this.updateNotes.bind(this)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}