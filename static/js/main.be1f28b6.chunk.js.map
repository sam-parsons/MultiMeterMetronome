{"version":3,"sources":["Components/Dimension/NumBeats.js","Components/Dimension/Subdivision.js","Components/Dimension/PlayStopButton.js","Components/Dimension/TempoSlider.js","Components/Dimension/ResetButton.js","Components/Dimension.js","Components/StepSequence/TopRow.js","Components/StepSequence/BottomRow.js","Components/StepSequence.js","App.js","index.js"],"names":["NumBeats","_this","this","react_default","a","createElement","id","defaultValue","onChange","props","updateTimeSig","playing","restartPlaying","value","_this2","selectElement","timeSig","renderNormal","renderShort","className","React","Component","Subdivision","PlayStopButton","onClick","updateMetronome","togglePlaying","TempoSlider","type","min","max","updateBPM","bpm","ResetButton","console","log","resetMetronome","Dimension","Dimension_NumBeats","Dimension_Subdivision","Dimension_ResetButton","Dimension_PlayStopButton","Dimension_TempoSlider","TopRow","name","e","updateNotes","BottomRow","StepSequence","StepSequence_TopRow","StepSequence_BottomRow","synth","Tone","PolySynth","Synth","toMaster","StartAudioContext","context","then","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","notes","renderedNotes","metronomeContainer","loopStatus","tempDivisor","placement","visualizeIndex","eventCache","generateMetronome","generateStepSequence","window","addEventListener","keyCode","preventDefault","_this3","setState","seqIsPlaying","Transport","stop","loop","loopEnd","loopStart","concat","calcMetLength","start","_this4","error","_this5","document","querySelector","slider","innerHTML","parseInt","_this6","top","bottom","Math","pow","_this7","topNote","bottomNote","forEach","part","removeAll","_this$state$notes","slicedToArray","note1","note2","metLength","beatTicks","calcBeatTicks","i","push","note","time","velocity","Part","triggerAttackRelease","matrix","readCheckboxes","generateSeqMatrix","topRow","bottomRow","div","key","element","checked","setAttribute","label","highlight","hidden","appendChild","array","topRowButtons","querySelectorAll","bottomRowButtons","topArray","bottomArray","length","_this$state$timeSig","numerator","finalMatrix","_this$state$timeSig2","tempMultiplier","Components_Dimension","bind","Components_StepSequence","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.be1f28b6.chunk.js","sourcesContent":["import React from \"react\";\n\nclass NumBeats extends React.Component {\n  renderNormal() {\n    return (\n      <select\n        id=\"num-beats-input\"\n        defaultValue=\"4\"\n        onChange={() => {\n          this.props.updateTimeSig();\n          if (this.props.playing) {\n            this.props.restartPlaying();\n          }\n        }}\n      >\n        <option value=\"2\">2</option>\n        <option value=\"3\">3</option>\n        <option value=\"4\">4</option>\n        <option value=\"5\">5</option>\n        <option value=\"6\">6</option>\n        <option value=\"7\">7</option>\n        <option value=\"8\">8</option>\n        <option value=\"9\">9</option>\n      </select>\n    );\n  }\n\n  renderShort() {\n    return (\n      <select\n        id=\"num-beats-input\"\n        defaultValue=\"4\"\n        onChange={() => {\n          this.props.updateTimeSig();\n          if (this.props.playing) {\n            this.props.restartPlaying();\n          }\n        }}\n      >\n        <option value=\"2\">2</option>\n        <option value=\"3\">3</option>\n        <option value=\"4\">4</option>\n        <option value=\"5\">5</option>\n        <option value=\"6\">6</option>\n        <option value=\"7\">7</option>\n        <option value=\"8\">8</option>\n        <option value=\"9\">9</option>\n        <option value=\"10\">10</option>\n        <option value=\"11\">11</option>\n        <option value=\"12\">12</option>\n        <option value=\"13\">13</option>\n        <option value=\"14\">14</option>\n        <option value=\"15\">15</option>\n        <option value=\"16\">16</option>\n        <option value=\"17\">17</option>\n      </select>\n    );\n  }\n\n  render() {\n    const timeSig = this.props.timeSig;\n    let selectElement;\n\n    if (timeSig[1] === 2 || timeSig[1] === 4) {\n      selectElement = this.renderNormal();\n    } else {\n      selectElement = this.renderShort();\n    }\n\n    return (\n      <div className=\"num-beats-div\">\n        {selectElement}\n        <div id=\"num-beats-desc\"># of beats</div>\n      </div>\n    );\n  }\n}\n\nexport default NumBeats;\n","import React from \"react\";\n\nclass Subdivision extends React.Component {\n  render() {\n    return (\n      <div className=\"subdivision-div\">\n        <select\n          id=\"subdivision-input\"\n          defaultValue=\"2\"\n          onChange={() => {\n            this.props.updateTimeSig();\n            if (this.props.playing) {\n              this.props.restartPlaying();\n            }\n          }}\n        >\n          <option value=\"1\">2</option>\n          <option value=\"2\">4</option>\n          <option value=\"3\">8</option>\n          <option value=\"4\">16</option>\n          <option value=\"5\">32</option>\n        </select>\n        <div id=\"subdivision-desc\">subdivision</div>\n      </div>\n    );\n  }\n}\n\nexport default Subdivision;\n","import React from \"react\";\n\nclass PlayStopButton extends React.Component {\n  render() {\n    return (\n      <div id=\"play-stop-div\">\n        <button\n          className=\"top-btns\"\n          id=\"play-stop-btn\"\n          onClick={() => {\n            this.props.updateMetronome();\n            this.props.togglePlaying();\n          }}\n        >\n          {this.props.playing ? (\n            <span>&#10074;&#10074;</span>\n          ) : (\n            <span>&#9658;</span>\n          )}\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default PlayStopButton;\n","import React from \"react\";\n\nclass TempoSlider extends React.Component {\n  render() {\n    return (\n      <div id=\"tempo-div\">\n        <input\n          id=\"tempo-sld\"\n          type=\"range\"\n          min=\"30\"\n          max=\"400\"\n          defaultValue=\"120\"\n          onChange={() => this.props.updateBPM()}\n        />\n        <div id=\"tempo-value\">\n          <div id=\"tempo-value-header\">\n            Quarter notes per minute:\n            <div id=\"bpm-value\">{this.props.bpm}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TempoSlider;\n","import React from \"react\";\n\nclass ResetButton extends React.Component {\n  render() {\n    return (\n      <div id=\"reset-div\">\n        <button\n          className=\"reset-btn\"\n          id=\"reset-btn\"\n          onClick={() => {\n            console.log(\"resetting metronome\");\n            this.props.resetMetronome();\n          }}\n        >\n          Reset\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default ResetButton;\n","import React from \"react\";\nimport NumBeats from \"./Dimension/NumBeats.js\";\nimport Subdivision from \"./Dimension/Subdivision.js\";\nimport PlayStopButton from \"./Dimension/PlayStopButton.js\";\nimport TempoSlider from \"./Dimension/TempoSlider.js\";\nimport ResetButton from \"./Dimension/ResetButton.js\";\n\nclass Dimension extends React.Component {\n  render() {\n    return (\n      <div className=\"dimension\">\n        <div className=\"time-signature\">\n          <NumBeats\n            playing={this.props.playing}\n            timeSig={this.props.timeSig}\n            updateTimeSig={this.props.updateTimeSig}\n            updateMetronome={this.props.updateMetronome}\n            restartPlaying={this.props.restartPlaying}\n          />\n          <Subdivision\n            playing={this.props.playing}\n            timeSig={this.props.timeSig}\n            updateTimeSig={this.props.updateTimeSig}\n            restartPlaying={this.props.restartPlaying}\n            updateMetronome={this.props.updateMetronome}\n          />\n          <ResetButton\n            updateTimeSig={this.props.updateTimeSig}\n            updateMetronome={this.props.updateMetronome}\n            resetMetronome={this.props.resetMetronome}\n          />\n        </div>\n        <div className=\"play-export\">\n          <PlayStopButton\n            togglePlaying={this.props.togglePlaying}\n            playing={this.props.playing}\n            updateMetronome={this.props.updateMetronome}\n          />\n        </div>\n        <TempoSlider updateBPM={this.props.updateBPM} bpm={this.props.bpm} />\n      </div>\n    );\n  }\n}\n\nexport default Dimension;\n","import React from \"react\";\n\nclass TopRow extends React.Component {\n  render() {\n    return (\n      <div id=\"top-shell-div\" className=\"note-shell-divs\">\n        <select\n          name=\"note1\"\n          id=\"note1\"\n          className=\"note-selects\"\n          defaultValue=\"Eb5\"\n          onChange={e => {\n            this.props.updateNotes();\n          }}\n        >\n          <option value=\"Ab4\">Ab4</option>\n          <option value=\"A4\">A4</option>\n          <option value=\"Bb4\">Bb4</option>\n          <option value=\"B4\">B4</option>\n          <option value=\"C5\">C5</option>\n          <option value=\"Db5\">Db5</option>\n          <option value=\"D5\">D5</option>\n          <option value=\"Eb5\">Eb5</option>\n          <option value=\"E5\">E5</option>\n          <option value=\"F5\">F5</option>\n          <option value=\"Gb5\">Gb5</option>\n          <option value=\"G5\">G5</option>\n          <option value=\"Ab5\">Ab5</option>\n          <option value=\"A5\">A5</option>\n          <option value=\"Bb5\">Bb5</option>\n          <option value=\"B5\">B5</option>\n        </select>\n        <div\n          className=\"top-row\"\n          onClick={e => {\n            //   e.preventDefault(); // ** WHY DOES THIS WORK ??\n            this.props.updateMetronome();\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default TopRow;\n","import React from \"react\";\n\nclass BottomRow extends React.Component {\n  render() {\n    return (\n      <div id=\"bottom-shell-div\" className=\"note-shell-divs\">\n        <select\n          name=\"note2\"\n          id=\"note2\"\n          className=\"note-selects\"\n          defaultValue=\"C5\"\n          onChange={e => {\n            this.props.updateNotes();\n          }}\n        >\n          <option value=\"Ab4\">Ab4</option>\n          <option value=\"A4\">A4</option>\n          <option value=\"Bb4\">Bb4</option>\n          <option value=\"B4\">B4</option>\n          <option value=\"C5\">C5</option>\n          <option value=\"Db5\">Db5</option>\n          <option value=\"D5\">D5</option>\n          <option value=\"Eb5\">Eb5</option>\n          <option value=\"E5\">E5</option>\n          <option value=\"F5\">F5</option>\n          <option value=\"Gb5\">Gb5</option>\n          <option value=\"G5\">G5</option>\n          <option value=\"Ab5\">Ab5</option>\n          <option value=\"A5\">A5</option>\n          <option value=\"Bb5\">Bb5</option>\n          <option value=\"B5\">B5</option>\n        </select>\n\n        <div\n          className=\"bottom-row\"\n          onClick={e => {\n            this.props.updateMetronome();\n            //   e.preventDefault(); // ** WHY DOES THIS WORK ??\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nexport default BottomRow;\n","import React from \"react\";\nimport TopRow from \"./StepSequence/TopRow.js\";\nimport BottomRow from \"./StepSequence/BottomRow.js\";\n// import ProgressBar from \"./StepSequence/ProgressBar.js\";\n\nclass StepSequence extends React.Component {\n  render() {\n    return (\n      <div id=\"step-sequence\">\n        <TopRow\n          updateMetronome={this.props.updateMetronome}\n          updateNotes={this.props.updateNotes}\n        />\n        <BottomRow\n          updateMetronome={this.props.updateMetronome}\n          updateNotes={this.props.updateNotes}\n        />\n        {/* <ProgressBar /> */}\n      </div>\n    );\n  }\n}\n\nexport default StepSequence;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dimension from \"./Components/Dimension.js\";\nimport StepSequence from \"./Components/StepSequence.js\";\nimport Tone from \"tone\";\nimport StartAudioContext from \"startaudiocontext\";\n\n/*\nTo-Do\n- variable tempo display indicators - quarters/eighths/etc per minute\n- organize and document css files\n- visualizations\n- fix timeSignature fields responsiveness\n*/\n\n/*\n * Questions\n ** how/where to extract magic numbers in calcMetLength and calcBeatTicks ??\n ** how does e.preventDefault() work on top and bottom row of step sequencer ??\n ** better way of writing resetMetronome() with multiple querySelectors on one element?\n */\n\nconst synth = new Tone.PolySynth(2, Tone.Synth).toMaster();\n\n// this may be unnecessary\nStartAudioContext(Tone.context).then(function() {\n  console.log(\"start audio context triggered\");\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playing: false,\n      bpm: 120,\n      notes: [\"C5\", \"EB5\"],\n      timeSig: [4, 4],\n      renderedNotes: [],\n      metronomeContainer: [], // holds Part for future stoppage and erasal\n      loopStatus: false, // what is this used for?\n      tempDivisor: 4,\n      placement: 0,\n      visualizeIndex: 0,\n      eventCache: []\n    };\n  }\n\n  componentDidMount() {\n    this.generateMetronome();\n    this.generateStepSequence();\n\n    // event listener for space bar\n    window.addEventListener(\"keydown\", e => {\n      if (e.keyCode === 32 || e.keyCode === 13) {\n        try {\n          e.preventDefault(); // prevents space bar from triggering selected checkboxes\n          this.togglePlaying();\n        } catch (e) {\n          console.log(e);\n        }\n      }\n    });\n  }\n\n  togglePlaying() {\n    if (this.state.playing) {\n      this.setState({ playing: false, seqIsPlaying: false }, () => {\n        //stop transport\n        Tone.Transport.stop();\n        console.log(\"playing stopped\");\n\n        // turn off looping - prevents collision with measure sequence loop\n        Tone.Transport.loop = false;\n        Tone.Transport.loopEnd = 0;\n      });\n    } else {\n      this.setState({ playing: true, seqIsPlaying: false }, () => {\n        // configure looping for step sequencer\n        Tone.Transport.loopStart = 0;\n        console.log(`calculated metronome length: ${this.calcMetLength()}`);\n        Tone.Transport.loopEnd =\n          this.calcMetLength() / (this.state.bpm * (8 / 60)); // magic equation\n        Tone.Transport.loop = true;\n\n        // start transport after loop config\n        Tone.Transport.start(\"+0.0\");\n        console.log(\"playing initiated\");\n      });\n    }\n  }\n\n  restartPlaying() {\n    if (this.state.playing) {\n      this.setState({ playing: true, seqIsPlaying: false }, () => {\n        //stop transport\n        Tone.Transport.stop();\n\n        // configure looping for step sequencer\n        Tone.Transport.loopStart = 0;\n        Tone.Transport.loopEnd =\n          this.calcMetLength() / (this.state.bpm * (8 / 60)); // magic equation\n        Tone.Transport.loop = true;\n\n        // start transport after loop config\n        Tone.Transport.start(\"+0.0\");\n        console.log(\"playing restarted\");\n      });\n    } else {\n      console.error(\"restartPlaying called while not playing\");\n    }\n  }\n\n  resetMetronome() {\n    console.log(\"resetting metronome II\");\n    this.setState(\n      {\n        bpm: 120,\n        loopStatus: false,\n        notes: [\"C5\", \"EB5\"],\n        timeSig: [4, 4]\n      },\n      () => {\n        // querySelectors - eliminate magic numbers - maybe move somewhere else?\n        document.querySelector(\"#num-beats-input\").value = 4;\n        document.querySelector(\"#subdivision-input\").value = 2;\n        document.querySelector(\"#note1\").value = \"Eb5\";\n        document.querySelector(\"#note2\").value = \"C5\";\n\n        this.updateBPM(this.state.bpm);\n        this.generateStepSequence();\n        this.updateMetronome();\n        this.restartPlaying();\n      }\n    );\n  }\n\n  updateBPM(value) {\n    // better way of writing this, maybe without two querySelectors??\n    const slider = value ? value : document.querySelector(\"#tempo-sld\").value;\n    if (value) {\n      document.querySelector(\"#tempo-sld\").value = value;\n    }\n    // set slider label\n    document.querySelector(\"#bpm-value\").innerHTML = `${slider}`;\n    this.setState(\n      {\n        bpm: parseInt(slider)\n      },\n      () => {\n        Tone.Transport.bpm.value = parseInt(slider);\n      }\n    );\n  }\n\n  updateTimeSig() {\n    // retrieve time signature values from select elements\n    const top = document.querySelector(\"#num-beats-input\");\n    const bottom = document.querySelector(\"#subdivision-input\");\n    this.setState(\n      {\n        timeSig: [parseInt(top.value), Math.pow(2, parseInt(bottom.value))]\n      },\n      () => {\n        console.log(\n          `time signature updated: ${this.state.timeSig[0]} / ${\n            this.state.timeSig[1]\n          }`\n        );\n        this.generateStepSequence();\n        this.updateMetronome();\n      }\n    );\n  }\n\n  // updates frequencies of notes\n  updateNotes() {\n    console.log(\"updating notes\");\n    const topNote = document.querySelector(\"#note1\").value;\n    const bottomNote = document.querySelector(\"#note2\").value;\n\n    this.setState(\n      {\n        notes: [bottomNote, topNote]\n      },\n      () => {\n        this.updateMetronome();\n      }\n    );\n  }\n\n  generateMetronome() {\n    console.log(\"generate metronome\");\n    // erase or stop all previous parts\n    const metronomeContainer = this.state.metronomeContainer;\n    metronomeContainer.forEach(part => part.removeAll());\n\n    // metronome vitals\n    const [note1, note2] = this.state.notes;\n    const metLength = this.calcMetLength();\n    const beatTicks = this.calcBeatTicks();\n\n    // new renderedNotes array, populate\n    const renderedNotes = [];\n    for (let i = 0; i < metLength; i++) {\n      if (i === 0) {\n        renderedNotes.push({\n          note: note2,\n          time: `0:0`,\n          velocity: 0.05\n        });\n      } else if (i % beatTicks === 0) {\n        renderedNotes.push({\n          note: note1,\n          time: `0:${i / beatTicks}`,\n          velocity: 0.05\n        });\n      }\n    }\n\n    // create new Part, start Part, push Part to container\n    const part = new Tone.Part((time, value) => {\n      synth.triggerAttackRelease(value.note, \"32n\", time, value.velocity);\n    }, renderedNotes).start(0);\n    metronomeContainer.push(part);\n\n    this.setState({\n      renderedNotes,\n      metronomeContainer\n    });\n  }\n\n  updateMetronome() {\n    console.log(\"updating metronome\");\n    // erase or stop all previous parts\n    const metronomeContainer = this.state.metronomeContainer;\n    metronomeContainer.forEach(part => part.removeAll());\n\n    // metronome vitals\n    const timeSig = this.state.timeSig;\n    const notes = this.state.notes;\n    const metLength = this.calcMetLength(timeSig);\n    const beatTicks = this.calcBeatTicks(timeSig[1]);\n\n    // make copy of rendered notes and erase everything\n    const renderedNotes = [];\n    const matrix = this.readCheckboxes();\n    console.log(\"updated matrix: \" + matrix);\n    for (let i = 0; i < metLength; i++) {\n      if (timeSig[1] <= 4 && i % (beatTicks / 2) === 0) {\n        if (matrix[0][i / (beatTicks / 2)] === 1) {\n          renderedNotes.push({\n            note: notes[1],\n            time: `0:${i / 8}`,\n            velocity: 0.1\n          });\n        }\n        if (matrix[1][i / (beatTicks / 2)] === 1) {\n          renderedNotes.push({\n            note: notes[0],\n            time: `0:${i / 8}`,\n            velocity: 0.1\n          });\n        }\n      } else if (i % beatTicks === 0) {\n        if (matrix[0][i / beatTicks] === 1) {\n          renderedNotes.push({\n            note: notes[1],\n            time: `0:${i / 8}`,\n            velocity: 0.1\n          });\n        }\n        if (matrix[1][i / beatTicks] === 1) {\n          renderedNotes.push({\n            note: notes[0],\n            time: `0:${i / 8}`,\n            velocity: 0.1\n          });\n        }\n      }\n    }\n    const part = new Tone.Part((time, value) => {\n      synth.triggerAttackRelease(value.note, \"32n\", time, value.velocity);\n    }, renderedNotes).start(0);\n    metronomeContainer.push(part);\n\n    this.setState({\n      renderedNotes,\n      metronomeContainer\n    });\n  }\n\n  generateStepSequence() {\n    const timeSig = this.state.timeSig;\n    const matrix = this.generateSeqMatrix();\n    const topRow = document.querySelector(\".top-row\");\n    const bottomRow = document.querySelector(\".bottom-row\");\n\n    console.log(\"updating top row checkboxes\");\n    // conditionals based on time signature divisor\n    // - halves and quarters are twice as many checkboxes as the numerator to accomodate one rhythmic level below (halves and quarters / quarters and eighths)\n    if (timeSig[1] >= 8) {\n      topRow.innerHTML = \"\";\n      for (let i = 0; i < timeSig[0]; i++) {\n        const div = document.createElement(\"div\");\n        div.key = \"td\" + i;\n        div.className = \"top-row-shell\";\n        const element = document.createElement(\"input\");\n        element.type = \"checkbox\";\n        element.key = \"a\" + i;\n        element.id = \"tr\" + i;\n        element.className = \"top-row-btn\";\n        element.checked = i === 0 ? true : false;\n        element.setAttribute(\"highlighted\", false);\n        const label = document.createElement(\"label\");\n        label.key = \"tk\" + i;\n        label.setAttribute(\"for\", \"tr\" + i);\n        const highlight = document.createElement(\"div\");\n        highlight.key = \"th\" + i;\n        highlight.className = \"highlight\";\n        highlight.hidden = false;\n        label.appendChild(highlight);\n        div.appendChild(element);\n        div.appendChild(label);\n        topRow.appendChild(div);\n      }\n    } else if (timeSig[1] <= 4) {\n      topRow.innerHTML = \"\";\n      for (let i = 0; i < timeSig[0] * 2; i++) {\n        const div = document.createElement(\"div\");\n        div.key = \"td\" + i;\n        div.className = \"top-row-shell\";\n        const element = document.createElement(\"input\");\n        element.type = \"checkbox\";\n        element.key = \"b\" + i;\n        element.id = \"tr\" + i;\n        element.className = \"top-row-btn\";\n        element.checked = matrix[0] === 1 && i === 0 ? true : false;\n        element.setAttribute(\"highlighted\", false);\n        const label = document.createElement(\"label\");\n        label.key = \"tk\" + i;\n        label.setAttribute(\"for\", \"tr\" + i);\n        const highlight = document.createElement(\"div\");\n        highlight.key = \"th\" + i;\n        highlight.className = \"highlight\";\n        highlight.hidden = false;\n        label.appendChild(highlight);\n        div.appendChild(element);\n        div.appendChild(label);\n        topRow.appendChild(div);\n      }\n    }\n\n    console.log(\"updating bottom row checkboxes\");\n    if (timeSig[1] >= 8) {\n      bottomRow.innerHTML = \"\";\n      for (let i = 0; i < timeSig[0]; i++) {\n        const div = document.createElement(\"div\");\n        div.key = \"td\" + i;\n        div.className = \"bottom-row-shell\";\n        const element = document.createElement(\"input\");\n        element.type = \"checkbox\";\n        element.key = \"a\" + i;\n        element.id = \"br\" + i;\n        element.className = \"bottom-row-btn\";\n        element.checked = matrix[i] === 1 && i !== 0 ? true : false;\n        const label = document.createElement(\"label\");\n        label.key = \"bk\" + i;\n        label.setAttribute(\"for\", \"br\" + i);\n        const highlight = document.createElement(\"div\");\n        highlight.key = \"th\" + i;\n        highlight.className = \"highlight\";\n        highlight.hidden = false;\n        label.appendChild(highlight);\n        div.appendChild(element);\n        div.appendChild(label);\n        bottomRow.appendChild(div);\n      }\n    } else if (timeSig[1] <= 4) {\n      bottomRow.innerHTML = \"\";\n      for (let i = 0; i < timeSig[0] * 2; i++) {\n        const div = document.createElement(\"div\");\n        div.key = \"td\" + i;\n        div.className = \"bottom-row-shell\";\n        const element = document.createElement(\"input\");\n        element.type = \"checkbox\";\n        element.key = \"b\" + i;\n        element.id = \"br\" + i;\n        element.className = \"bottom-row-btn\";\n        element.checked = matrix[i] === 1 && i !== 0 ? true : false;\n        const label = document.createElement(\"label\");\n        label.key = \"bk\" + i;\n        label.setAttribute(\"for\", \"br\" + i);\n        const highlight = document.createElement(\"div\");\n        highlight.key = \"th\" + i;\n        highlight.className = \"highlight\";\n        highlight.hidden = false;\n        label.appendChild(highlight);\n        div.appendChild(element);\n        div.appendChild(label);\n        bottomRow.appendChild(div);\n      }\n    }\n  }\n\n  // computes a matrix based upon the current state of the step sequencer\n  readCheckboxes(array) {\n    console.log(\"reading checkboxes\");\n    // gather current checkboxes\n    const topRowButtons = document.querySelectorAll(\".top-row-btn\");\n    const bottomRowButtons = document.querySelectorAll(\".bottom-row-btn\");\n    console.log(\"top row step seq: \", topRowButtons);\n    // create new arrays\n    const topArray = [];\n    const bottomArray = [];\n    if (!array) {\n      for (let i = 0; i < topRowButtons.length; i++) {\n        topArray.push(topRowButtons[i].checked ? 1 : 0);\n        bottomArray.push(bottomRowButtons[i].checked ? 1 : 0);\n      }\n      console.log([topArray, bottomArray]);\n      return [topArray, bottomArray];\n    } else {\n      for (let i = 0; i < topRowButtons.length; i++) {\n        topArray.push(topRowButtons[i].checked ? 1 : 0);\n        bottomArray.push(bottomRowButtons[i].checked ? 1 : 0);\n      }\n      console.log([topArray, bottomArray]);\n      return [topArray, bottomArray];\n    }\n  }\n\n  // generates a generic matrix for new time signatures\n  generateSeqMatrix() {\n    console.log(\"generating step sequence matrix\");\n    const [numerator, denominator] = this.state.timeSig;\n    const finalMatrix = [];\n    // 8ths, 16ths, and 32nds matrices length determined by numerator\n    // half and quarters matrices length twice as long to incorporate rhythmic level below\n    if (denominator >= 8) {\n      for (let i = 0; i < numerator; i++) {\n        i % 2 === 0 ? finalMatrix.push(1) : finalMatrix.push(0);\n      }\n    } else {\n      for (let i = 0; i < numerator * 2; i++) {\n        i % 2 === 0 ? finalMatrix.push(1) : finalMatrix.push(0);\n      }\n    }\n    return finalMatrix;\n  }\n\n  // calculates phrase length of given time signature at 32nd resolution\n  calcMetLength() {\n    const [tempMultiplier, tempDivisor] = this.state.timeSig;\n    switch (tempDivisor) {\n      case 2:\n        return 16 * tempMultiplier;\n      case 4:\n        return 8 * tempMultiplier;\n      case 8:\n        return 4 * tempMultiplier;\n      case 16:\n        return 2 * tempMultiplier;\n      case 32:\n        return tempMultiplier;\n      default:\n        return 8 * tempMultiplier;\n    }\n  }\n\n  // returns resolution of note placement for generateMetronome()\n  calcBeatTicks() {\n    switch (this.state.timeSig[1]) {\n      case 2:\n        return 16;\n      case 4:\n        return 8;\n      case 8:\n        return 4;\n      case 16:\n        return 2;\n      case 32:\n        return 1;\n      default:\n        return 8;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <span id=\"info-span\">Sam Parsons ©2019</span>\n        <div className=\"title\">\n          <h3>Multimeter Metronome</h3>\n        </div>\n        <Dimension\n          timeSig={this.state.timeSig}\n          updateTimeSig={this.updateTimeSig.bind(this)}\n          updateMetronome={this.updateMetronome.bind(this)}\n          playing={this.state.playing}\n          togglePlaying={this.togglePlaying.bind(this)}\n          restartPlaying={this.restartPlaying.bind(this)}\n          bpm={this.state.bpm}\n          updateBPM={this.updateBPM.bind(this)}\n          resetMetronome={this.resetMetronome.bind(this)}\n        />\n        <StepSequence\n          generateStepSequence={this.generateStepSequence.bind(this)}\n          updateMetronome={this.updateMetronome.bind(this)}\n          updateNotes={this.updateNotes.bind(this)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}