{"version":3,"sources":["Components/Dimension/NumBeats.js","Components/Dimension/Subdivision.js","Components/Dimension/PlayStopButton.js","Components/Dimension/TempoSlider.js","Components/Dimension.js","Components/StepSequence/TopRow.js","Components/StepSequence/BottomRow.js","Components/StepSequence.js","App.js","index.js"],"names":["NumBeats","_this","this","react_default","a","createElement","className","id","defaultValue","onChange","props","updateTimeSig","playing","restartPlaying","value","React","Component","Subdivision","PlayStopButton","onClick","updateMetronome","togglePlaying","TempoSlider","type","min","max","updateBPM","bpm","Dimension","Dimension_NumBeats","timeSig","Dimension_Subdivision","Dimension_PlayStopButton","Dimension_TempoSlider","TopRow","e","BottomRow","StepSequence","StepSequence_TopRow","StepSequence_BottomRow","synth","Tone","PolySynth","Synth","toMaster","StartAudioContext","context","then","console","log","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","loopStatus","notes","renderedNotes","metronomeContainer","tempDivisor","placement","visualizeIndex","eventCache","_this2","generateMetronome","generateStepSequence","window","addEventListener","keyCode","preventDefault","_this3","setState","seqIsPlaying","Transport","stop","loop","loopEnd","loopStart","concat","calcMetLength","start","_this4","error","slider","document","querySelector","innerHTML","parseInt","_this5","top","bottom","Math","pow","forEach","part","removeAll","_this$state$notes","slicedToArray","note1","note2","metLength","beatTicks","calcBeatTicks","i","push","note","time","velocity","Part","triggerAttackRelease","matrix","readCheckboxes","generateSeqMatrix","topRow","bottomRow","div","key","element","checked","setAttribute","label","highlight","hidden","appendChild","array","topRowButtons","querySelectorAll","bottomRowButtons","topArray","bottomArray","length","_this$state$timeSig","numerator","finalMatrix","_this$state$timeSig2","tempMultiplier","Components_Dimension","bind","Components_StepSequence","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.44fd0263.chunk.js","sourcesContent":["import React from \"react\";\n\nclass NumBeats extends React.Component {\n  render() {\n    return (\n      <div className=\"num-beats-div\">\n        <select\n          id=\"num-beats-input\"\n          defaultValue=\"4\"\n          onChange={() => {\n            this.props.updateTimeSig();\n            if (this.props.playing) {\n              this.props.restartPlaying();\n            }\n          }}\n        >\n          <option value=\"2\">2</option>\n          <option value=\"3\">3</option>\n          <option value=\"4\">4</option>\n          <option value=\"5\">5</option>\n          <option value=\"6\">6</option>\n          <option value=\"7\">7</option>\n          <option value=\"8\">8</option>\n          <option value=\"9\">9</option>\n          <option value=\"10\">10</option>\n          <option value=\"11\">11</option>\n          <option value=\"12\">12</option>\n          <option value=\"13\">13</option>\n          <option value=\"14\">14</option>\n          <option value=\"15\">15</option>\n          <option value=\"16\">16</option>\n          <option value=\"17\">17</option>\n          <option value=\"18\">18</option>\n          <option value=\"19\">19</option>\n          <option value=\"20\">20</option>\n        </select>\n        <div id=\"num-beats-desc\"># of beats</div>\n      </div>\n    );\n  }\n}\n\nexport default NumBeats;\n","import React from \"react\";\n\nclass Subdivision extends React.Component {\n  render() {\n    return (\n      <div className=\"subdivision-div\">\n        <select\n          id=\"subdivision-input\"\n          defaultValue=\"2\"\n          onChange={() => {\n            this.props.updateTimeSig();\n            if (this.props.playing) {\n              this.props.restartPlaying();\n            }\n          }}\n        >\n          <option value=\"1\">2</option>\n          <option value=\"2\">4</option>\n          <option value=\"3\">8</option>\n          <option value=\"4\">16</option>\n          <option value=\"5\">32</option>\n        </select>\n        <div id=\"subdivision-desc\">subdivision</div>\n      </div>\n    );\n  }\n}\n\nexport default Subdivision;\n","import React from \"react\";\n\nclass PlayStopButton extends React.Component {\n  render() {\n    return (\n      <div id=\"play-stop-div\">\n        <button\n          className=\"top-btns\"\n          id=\"play-stop-btn\"\n          onClick={() => {\n            this.props.updateMetronome();\n            this.props.togglePlaying();\n          }}\n        >\n          {this.props.playing ? (\n            <span>&#10074;&#10074;</span>\n          ) : (\n            <span>&#9658;</span>\n          )}\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default PlayStopButton;\n","import React from \"react\";\n\nclass TempoSlider extends React.Component {\n  render() {\n    return (\n      <div id=\"tempo-div\">\n        <input\n          id=\"tempo-sld\"\n          type=\"range\"\n          min=\"30\"\n          max=\"400\"\n          defaultValue=\"120\"\n          onChange={() => this.props.updateBPM()}\n        />\n        <div id=\"tempo-value\">\n          <div id=\"tempo-value-header\">\n            Quarter notes per minute:\n            <div id=\"bpm-value\">{this.props.bpm}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TempoSlider;\n","import React from \"react\";\nimport NumBeats from \"./Dimension/NumBeats.js\";\nimport Subdivision from \"./Dimension/Subdivision.js\";\nimport PlayStopButton from \"./Dimension/PlayStopButton.js\";\nimport TempoSlider from \"./Dimension/TempoSlider.js\";\n\nclass Dimension extends React.Component {\n  render() {\n    return (\n      <div className=\"dimension\">\n        <div className=\"time-signature\">\n          <NumBeats\n            playing={this.props.playing}\n            timeSig={this.props.timeSig}\n            updateTimeSig={this.props.updateTimeSig}\n            updateMetronome={this.props.updateMetronome}\n            restartPlaying={this.props.restartPlaying}\n          />\n          <Subdivision\n            playing={this.props.playing}\n            timeSig={this.props.timeSig}\n            updateTimeSig={this.props.updateTimeSig}\n            restartPlaying={this.props.restartPlaying}\n            updateMetronome={this.props.updateMetronome}\n          />\n        </div>\n        <div className=\"play-export\">\n          <PlayStopButton\n            togglePlaying={this.props.togglePlaying}\n            playing={this.props.playing}\n            updateMetronome={this.props.updateMetronome}\n          />\n        </div>\n        <TempoSlider updateBPM={this.props.updateBPM} bpm={this.props.bpm} />\n      </div>\n    );\n  }\n}\n\nexport default Dimension;\n","import React from \"react\";\n\nclass TopRow extends React.Component {\n  render() {\n    return (\n      <div\n        className=\"top-row\"\n        onClick={e => {\n          //   e.preventDefault(); // ** WHY DOES THIS WORK ??\n          this.props.updateMetronome();\n        }}\n      />\n    );\n  }\n}\n\nexport default TopRow;\n","import React from \"react\";\n\nclass BottomRow extends React.Component {\n  render() {\n    return (\n      <div\n        className=\"bottom-row\"\n        onClick={e => {\n          this.props.updateMetronome();\n          //   e.preventDefault(); // ** WHY DOES THIS WORK ??\n        }}\n      />\n    );\n  }\n}\n\nexport default BottomRow;\n","import React from \"react\";\nimport TopRow from \"./StepSequence/TopRow.js\";\nimport BottomRow from \"./StepSequence/BottomRow.js\";\n// import ProgressBar from \"./StepSequence/ProgressBar.js\";\n\nclass StepSequence extends React.Component {\n  render() {\n    return (\n      <div id=\"step-sequence\">\n        <TopRow updateMetronome={this.props.updateMetronome} />\n        <BottomRow updateMetronome={this.props.updateMetronome} />\n        {/* <ProgressBar /> */}\n      </div>\n    );\n  }\n}\n\nexport default StepSequence;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dimension from \"./Components/Dimension.js\";\nimport StepSequence from \"./Components/StepSequence.js\";\nimport Tone from \"tone\";\nimport StartAudioContext from \"startaudiocontext\";\n\n/*\nTo-Do\n- variable pitch selectors\n- reset button - pattern or program?\n- organize and document css files\n- visualizations\n- step sequencer large numerator formatting (only make >11 available for 8ths, 16ths, 32nds)\n*/\n\n/*\n * Questions\n ** how/where to extract magic numbers in calcMetLength and calcBeatTicks ??\n ** how to use a ternary operator at the end of togglePlaying() ? - NOT IMPORTANT\n ** how does e.preventDefault() work on top and bottom row of step sequencer ??\n */\n\nconst synth = new Tone.PolySynth(2, Tone.Synth).toMaster();\n\n// this may be unnecessary\nStartAudioContext(Tone.context).then(function() {\n  console.log(\"start audio context triggered\");\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playing: false,\n      bpm: 120,\n      loopStatus: false,\n      notes: [\"C5\", \"EB5\"],\n      timeSig: [4, 4],\n      renderedNotes: [],\n      metronomeContainer: [], // holds Part for future stoppage and erasal\n      tempDivisor: 4,\n      placement: 0,\n      visualizeIndex: 0,\n      eventCache: []\n    };\n  }\n\n  componentDidMount() {\n    this.generateMetronome();\n    this.generateStepSequence();\n\n    // event listener for space bar\n    window.addEventListener(\"keydown\", e => {\n      if (e.keyCode === 32 || e.keyCode === 13) {\n        try {\n          e.preventDefault(); // prevents space bar from triggering selected checkboxes\n          this.togglePlaying();\n        } catch (e) {\n          console.log(e);\n        }\n      }\n    });\n    // big bug - on stops, last alteration to step sequence gets erased\n  }\n\n  togglePlaying() {\n    if (this.state.playing) {\n      this.setState({ playing: false, seqIsPlaying: false }, () => {\n        //stop transport\n        Tone.Transport.stop();\n        console.log(\"playing stopped\");\n\n        // turn off looping - prevents collision with measure sequence loop\n        Tone.Transport.loop = false;\n        Tone.Transport.loopEnd = 0;\n      });\n    } else {\n      this.setState({ playing: true, seqIsPlaying: false }, () => {\n        // configure looping for step sequencer\n        Tone.Transport.loopStart = 0;\n        console.log(`calculated metronome length: ${this.calcMetLength()}`);\n        Tone.Transport.loopEnd =\n          this.calcMetLength() / (this.state.bpm * (8 / 60)); // magic equation\n        Tone.Transport.loop = true;\n\n        // start transport after loop config\n        Tone.Transport.start(\"+0.0\");\n        console.log(\"playing initiated\");\n      });\n    }\n\n    // ** how to make this work after above async setStates ??\n    // console.log(\n    //   Tone.Transport.state == \"started\"\n    //     ? \"playing initiated\"\n    //     : \"playing stopped\"\n    // );\n  }\n\n  restartPlaying() {\n    if (this.state.playing) {\n      this.setState({ playing: true, seqIsPlaying: false }, () => {\n        //stop transport\n        Tone.Transport.stop();\n\n        // configure looping for step sequencer\n        Tone.Transport.loopStart = 0;\n        Tone.Transport.loopEnd =\n          this.calcMetLength() / (this.state.bpm * (8 / 60)); // magic equation\n        Tone.Transport.loop = true;\n\n        // start transport after loop config\n        Tone.Transport.start(\"+0.0\");\n        console.log(\"playing restarted\");\n      });\n    } else {\n      console.error(\"restartPlaying called while not playing\");\n    }\n  }\n\n  updateBPM() {\n    const slider = document.querySelector(\"#tempo-sld\").value;\n    // set slider label\n    document.querySelector(\"#bpm-value\").innerHTML = `${slider}`;\n    this.setState(\n      {\n        bpm: parseInt(slider)\n      },\n      () => {\n        Tone.Transport.bpm.value = parseInt(slider);\n      }\n    );\n  }\n\n  updateTimeSig() {\n    // retrieve time signature values from select elements\n    const top = document.querySelector(\"#num-beats-input\");\n    const bottom = document.querySelector(\"#subdivision-input\");\n    this.setState(\n      {\n        timeSig: [parseInt(top.value), Math.pow(2, parseInt(bottom.value))]\n      },\n      () => {\n        console.log(\n          `time signature updated: ${this.state.timeSig[0]} / ${\n            this.state.timeSig[1]\n          }`\n        );\n        this.generateStepSequence();\n        this.updateMetronome();\n      }\n    );\n  }\n\n  generateMetronome() {\n    console.log(\"generate metronome\");\n    // erase or stop all previous parts\n    const metronomeContainer = this.state.metronomeContainer;\n    metronomeContainer.forEach(part => part.removeAll());\n\n    // metronome vitals\n    const [note1, note2] = this.state.notes;\n    const metLength = this.calcMetLength();\n    const beatTicks = this.calcBeatTicks();\n\n    // new renderedNotes array, populate\n    const renderedNotes = [];\n    for (let i = 0; i < metLength; i++) {\n      if (i === 0) {\n        renderedNotes.push({\n          note: note2,\n          time: `0:0`,\n          velocity: 0.05\n        });\n      } else if (i % beatTicks === 0) {\n        renderedNotes.push({\n          note: note1,\n          time: `0:${i / beatTicks}`,\n          velocity: 0.05\n        });\n      }\n    }\n\n    // create new Part, start Part, push Part to container\n    const part = new Tone.Part((time, value) => {\n      synth.triggerAttackRelease(value.note, \"32n\", time, value.velocity);\n    }, renderedNotes).start(0);\n    metronomeContainer.push(part);\n\n    // set state\n    this.setState({\n      renderedNotes,\n      metronomeContainer\n    });\n  }\n\n  updateMetronome() {\n    console.log(\"updating metronome\");\n    // erase or stop all previous parts\n    const metronomeContainer = this.state.metronomeContainer;\n    metronomeContainer.forEach(part => part.removeAll());\n\n    // metronome vitals\n    const timeSig = this.state.timeSig;\n    const notes = this.state.notes;\n    const metLength = this.calcMetLength(timeSig);\n    const beatTicks = this.calcBeatTicks(timeSig[1]);\n\n    // make copy of rendered notes and erase everything\n    const renderedNotes = [];\n    const matrix = this.readCheckboxes();\n    console.log(\"updated matrix: \" + matrix);\n    for (let i = 0; i < metLength; i++) {\n      if (timeSig[1] <= 4 && i % (beatTicks / 2) === 0) {\n        if (matrix[0][i / (beatTicks / 2)] === 1) {\n          renderedNotes.push({\n            note: notes[1],\n            time: `0:${i / 8}`,\n            velocity: 0.1\n          });\n        }\n        if (matrix[1][i / (beatTicks / 2)] === 1) {\n          renderedNotes.push({\n            note: notes[0],\n            time: `0:${i / 8}`,\n            velocity: 0.1\n          });\n        }\n      } else if (i % beatTicks === 0) {\n        if (matrix[0][i / beatTicks] === 1) {\n          renderedNotes.push({\n            note: notes[1],\n            time: `0:${i / 8}`,\n            velocity: 0.1\n          });\n        }\n        if (matrix[1][i / beatTicks] === 1) {\n          renderedNotes.push({\n            note: notes[0],\n            time: `0:${i / 8}`,\n            velocity: 0.1\n          });\n        }\n      }\n    }\n    const part = new Tone.Part((time, value) => {\n      synth.triggerAttackRelease(value.note, \"32n\", time, value.velocity);\n    }, renderedNotes).start(0);\n    metronomeContainer.push(part);\n\n    // set state\n    this.setState({\n      renderedNotes,\n      metronomeContainer\n    });\n  }\n\n  generateStepSequence() {\n    const timeSig = this.state.timeSig;\n    const matrix = this.generateSeqMatrix();\n    const topRow = document.querySelector(\".top-row\");\n    const bottomRow = document.querySelector(\".bottom-row\");\n\n    console.log(\"updating top row checkboxes\");\n    // conditionals based on time signature divisor\n    // - halves and quarters are twice as many checkboxes as the numerator to accomodate one rhythmic level below (halves and quarters / quarters and eighths)\n    if (timeSig[1] >= 8) {\n      topRow.innerHTML = \"\";\n      for (let i = 0; i < timeSig[0]; i++) {\n        const div = document.createElement(\"div\");\n        div.key = \"td\" + i;\n        div.className = \"top-row-shell\";\n        const element = document.createElement(\"input\");\n        element.type = \"checkbox\";\n        element.key = \"a\" + i;\n        element.id = \"tr\" + i;\n        element.className = \"top-row-btn\";\n        element.checked = i === 0 ? true : false;\n        element.setAttribute(\"highlighted\", false);\n        const label = document.createElement(\"label\");\n        label.key = \"tk\" + i;\n        label.setAttribute(\"for\", \"tr\" + i);\n        const highlight = document.createElement(\"div\");\n        highlight.key = \"th\" + i;\n        highlight.className = \"highlight\";\n        highlight.hidden = false;\n        label.appendChild(highlight);\n        div.appendChild(element);\n        div.appendChild(label);\n        topRow.appendChild(div);\n      }\n    } else if (timeSig[1] <= 4) {\n      topRow.innerHTML = \"\";\n      for (let i = 0; i < timeSig[0] * 2; i++) {\n        const div = document.createElement(\"div\");\n        div.key = \"td\" + i;\n        div.className = \"top-row-shell\";\n        const element = document.createElement(\"input\");\n        element.type = \"checkbox\";\n        element.key = \"b\" + i;\n        element.id = \"tr\" + i;\n        element.className = \"top-row-btn\";\n        element.checked = matrix[0] === 1 && i === 0 ? true : false;\n        element.setAttribute(\"highlighted\", false);\n        const label = document.createElement(\"label\");\n        label.key = \"tk\" + i;\n        label.setAttribute(\"for\", \"tr\" + i);\n        const highlight = document.createElement(\"div\");\n        highlight.key = \"th\" + i;\n        highlight.className = \"highlight\";\n        highlight.hidden = false;\n        label.appendChild(highlight);\n        div.appendChild(element);\n        div.appendChild(label);\n        topRow.appendChild(div);\n      }\n    }\n\n    console.log(\"updating bottom row checkboxes\");\n    if (timeSig[1] >= 8) {\n      bottomRow.innerHTML = \"\";\n      for (let i = 0; i < timeSig[0]; i++) {\n        const div = document.createElement(\"div\");\n        div.key = \"td\" + i;\n        div.className = \"bottom-row-shell\";\n        const element = document.createElement(\"input\");\n        element.type = \"checkbox\";\n        element.key = \"a\" + i;\n        element.id = \"br\" + i;\n        element.className = \"bottom-row-btn\";\n        element.checked = matrix[i] === 1 && i !== 0 ? true : false;\n        const label = document.createElement(\"label\");\n        label.key = \"bk\" + i;\n        label.setAttribute(\"for\", \"br\" + i);\n        const highlight = document.createElement(\"div\");\n        highlight.key = \"th\" + i;\n        highlight.className = \"highlight\";\n        highlight.hidden = false;\n        label.appendChild(highlight);\n        div.appendChild(element);\n        div.appendChild(label);\n        bottomRow.appendChild(div);\n      }\n    } else if (timeSig[1] <= 4) {\n      bottomRow.innerHTML = \"\";\n      for (let i = 0; i < timeSig[0] * 2; i++) {\n        const div = document.createElement(\"div\");\n        div.key = \"td\" + i;\n        div.className = \"bottom-row-shell\";\n        const element = document.createElement(\"input\");\n        element.type = \"checkbox\";\n        element.key = \"b\" + i;\n        element.id = \"br\" + i;\n        element.className = \"bottom-row-btn\";\n        element.checked = matrix[i] === 1 && i !== 0 ? true : false;\n        const label = document.createElement(\"label\");\n        label.key = \"bk\" + i;\n        label.setAttribute(\"for\", \"br\" + i);\n        const highlight = document.createElement(\"div\");\n        highlight.key = \"th\" + i;\n        highlight.className = \"highlight\";\n        highlight.hidden = false;\n        label.appendChild(highlight);\n        div.appendChild(element);\n        div.appendChild(label);\n        bottomRow.appendChild(div);\n      }\n    }\n  }\n\n  // computes a matrix based upon the current state of the step sequencer\n  readCheckboxes(array) {\n    console.log(\"reading checkboxes\");\n    // gather current checkboxes\n    const topRowButtons = document.querySelectorAll(\".top-row-btn\");\n    const bottomRowButtons = document.querySelectorAll(\".bottom-row-btn\");\n    console.log(\"top row step seq: \", topRowButtons);\n    // create new arrays\n    const topArray = [];\n    const bottomArray = [];\n    if (!array) {\n      for (let i = 0; i < topRowButtons.length; i++) {\n        topArray.push(topRowButtons[i].checked ? 1 : 0);\n        bottomArray.push(bottomRowButtons[i].checked ? 1 : 0);\n      }\n      console.log([topArray, bottomArray]);\n      return [topArray, bottomArray];\n    } else {\n      for (let i = 0; i < topRowButtons.length; i++) {\n        topArray.push(topRowButtons[i].checked ? 1 : 0);\n        bottomArray.push(bottomRowButtons[i].checked ? 1 : 0);\n      }\n      console.log([topArray, bottomArray]);\n      return [topArray, bottomArray];\n    }\n  }\n\n  // generates a generic matrix for new time signatures\n  generateSeqMatrix() {\n    console.log(\"generating step sequence matrix\");\n    const [numerator, denominator] = this.state.timeSig;\n    const finalMatrix = [];\n    // 8ths, 16ths, and 32nds matrices length determined by numerator\n    // half and quarters matrices length twice as long to incorporate rhythmic level below\n    if (denominator >= 8) {\n      for (let i = 0; i < numerator; i++) {\n        i % 2 === 0 ? finalMatrix.push(1) : finalMatrix.push(0);\n      }\n    } else {\n      for (let i = 0; i < numerator * 2; i++) {\n        i % 2 === 0 ? finalMatrix.push(1) : finalMatrix.push(0);\n      }\n    }\n    return finalMatrix;\n  }\n\n  // calculates phrase length of given time signature at 32nd resolution\n  calcMetLength() {\n    const [tempMultiplier, tempDivisor] = this.state.timeSig;\n    switch (tempDivisor) {\n      case 2:\n        return 16 * tempMultiplier;\n      case 4:\n        return 8 * tempMultiplier;\n      case 8:\n        return 4 * tempMultiplier;\n      case 16:\n        return 2 * tempMultiplier;\n      case 32:\n        return tempMultiplier;\n      default:\n        return 8 * tempMultiplier;\n    }\n  }\n\n  // returns resolution of note placement for generateMetronome()\n  calcBeatTicks() {\n    switch (this.state.timeSig[1]) {\n      case 2:\n        return 16;\n      case 4:\n        return 8;\n      case 8:\n        return 4;\n      case 16:\n        return 2;\n      case 32:\n        return 1;\n      default:\n        return 8;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <span id=\"info-span\">Sam Parsons ©2019</span>\n        <div className=\"title\">\n          <h3>Multimeter Metronome</h3>\n        </div>\n        <Dimension\n          timeSig={this.state.timeSig}\n          updateTimeSig={this.updateTimeSig.bind(this)}\n          updateMetronome={this.updateMetronome.bind(this)}\n          playing={this.state.playing}\n          togglePlaying={this.togglePlaying.bind(this)}\n          restartPlaying={this.restartPlaying.bind(this)}\n          bpm={this.state.bpm}\n          updateBPM={this.updateBPM.bind(this)}\n        />\n        <StepSequence\n          generateStepSequence={this.generateStepSequence.bind(this)}\n          updateMetronome={this.updateMetronome.bind(this)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}